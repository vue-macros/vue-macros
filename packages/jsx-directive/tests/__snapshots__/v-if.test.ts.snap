// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`v-if > ./fixtures/v-if/v-else.vue 1`] = `
"<script setup lang="tsx">
const { foo = 2 } = defineProps<{
  foo: number
}>()

defineRender(() => (
  <>
    {(foo === 0) ? <div>0</div> :
    (foo === 1) ? <div>1</div> :
    <div>2</div>}
  </>
))
</script>
"
`;

exports[`v-if > ./fixtures/v-if/v-else-if.vue 1`] = `
"<script setup lang="tsx">
const { foo = 0 } = defineProps<{
  foo: number
}>()

defineRender(() => (
  <>
    {(foo === 0) ? <div>0</div> :
    (foo === 1) ? <div>1</div> :
    (foo === 2) ? <div>2</div> : null}
  </>
))
</script>
"
`;

exports[`v-if > ./fixtures/v-if/v-if.vue 1`] = `
"<script setup lang="tsx">
import { expectTypeOf } from 'expect-type'
const { foo } = defineProps<{
  foo: number
}>()

const Comp = <>{(foo) ? <div></div> : null}</>

defineRender(() => (
  <>
    {(foo === 0) ? <div>{expectTypeOf<0>(foo)}</div> : null}
    {(foo ? true : false) ? <div>1</div> : null}
  </>
))
</script>
"
`;

exports[`v-if > ./fixtures/v-if/v-if-nested.vue 1`] = `
"<script setup lang="tsx">
const { foo = 0 } = defineProps<{
  foo: number
}>()

defineRender(() => (
  <>
    {(foo === 0) ? <div>
      {(foo === 0) ? <div>0-0</div> :
      (foo === 1) ? <div>0-1</div> :
      <div>0-2</div>}
    </div> : null}
  </>
))
</script>
"
`;
