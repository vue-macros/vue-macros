// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`v-on > ./fixtures/v-on/child.vue 1`] = `
"<script setup lang="tsx" generic="T">
import { withModifiers as __MACROS_withModifiers } from "vue";
const { bar } = defineProps<{
  bar: T
}>()

const slots = defineSlots<{
  default: () => any
  bottom: (props: { foo: 1 }) => any
}>()

const emit = defineEmits<{
  log: [foo: T]
  click: []
}>()

defineRender(() => (
  <form onSubmit={__MACROS_withModifiers(() => {}, ['prevent'])} onClick={() => emit('log', bar)}>
    <slots.default />
  </form>
))
</script>
"
`;

exports[`v-on > ./fixtures/v-on/index.vue 1`] = `
"<script setup lang="tsx">
import { withModifiers as __MACROS_withModifiers } from "vue";
import { withKeys as __MACROS_withKeys } from "vue";const __MACROS_transformVOn = (obj) => Object.entries(obj).reduce((res, [key, value]) => (res['on' + key[0].toUpperCase() + key.slice(1)] = value, res), {});
import { expectTypeOf } from 'expect-type'
import Child from './child.vue'

let bar = $ref('')
defineRender(() => (
  <fieldset>
    <legend>v-on</legend>

    <Child
      bar={bar}
      {...__MACROS_transformVOn({ log: (e) => expectTypeOf<string>(e) })}
      onClickCapture={__MACROS_withModifiers(() => console.log('stopped'), ['stop'])}
    >
      <input
        value={bar}
        onInput={__MACROS_withModifiers((event: any) => (bar = event.target.value), ['prevent'])}
        onKeydown={__MACROS_withKeys(() => {}, ['down'])}
        onKeydown={__MACROS_withKeys(() => {}, ['up'])}
      />
      {bar}
    </Child>
  </fieldset>
))
</script>
"
`;
