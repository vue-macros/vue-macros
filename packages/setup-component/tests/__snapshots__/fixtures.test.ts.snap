// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures > tests/fixtures/SetupFC.tsx 1`] = `
"// SetupFC.js
import { defineComponent, ref, createVNode, createTextVNode, VNode } from 'vue';
import { expectTypeOf } from 'expect-type';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	__name: "SetupFC.tsx-setup-component-0",
	setup(__props, { expose: __expose }) {
		__expose();
		const { App } = __MACROS_ctx();
		expectTypeOf(props).toEqualTypeOf();
		expectTypeOf(emit).toEqualTypeOf();
		expectTypeOf(slots).toEqualTypeOf();
		const count = ref(0);
		defineRender(() => createVNode("div", null, [
			createVNode("p", null, [createTextVNode("hi, this is "), props.name]),
			createVNode("p", null, [count.value]),
			createVNode("button", { "onClick": () => count.value++ }, [createTextVNode("inc")])
		]));
		const __returned__ = {
			App,
			count,
			VNode,
			ref,
			get expectTypeOf() {
				return expectTypeOf;
			}
		};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const App = __MACROS_setupComponent_0(() => ({ App }));

export { App };
"
`;

exports[`fixtures > tests/fixtures/async.tsx 1`] = `
"// async.js
import { defineComponent, withAsyncContext } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	__name: "async.tsx-setup-component-0",
	props: { foo: {
		type: String,
		required: true
	} },
	async setup(__props, { expose: __expose }) {
		__expose();
		let __temp, __restore;
		const { App } = __MACROS_ctx();
		;
		[__temp, __restore] = withAsyncContext(() => globalThis.foo()), await __temp, __restore();
		const __returned__ = { App };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const App = __MACROS_setupComponent_0(() => ({ App }));

export { App };
"
`;

exports[`fixtures > tests/fixtures/basic.ts 1`] = `
"// basic.js
import { defineComponent, h } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	...{ name: "App" },
	__name: "basic.ts-setup-component-0",
	props: { foo: {
		type: String,
		required: true
	} },
	emits: ["change"],
	setup(__props, { expose: __expose }) {
		__expose();
		const { App } = __MACROS_ctx();
		const __returned__ = {
			App,
			h
		};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const App = __MACROS_setupComponent_0(() => ({ App }));
h(App);

export { App };
"
`;

exports[`fixtures > tests/fixtures/context.tsx 1`] = `
"// context.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main$1 = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	__name: "context.tsx-setup-component-1",
	setup(__props, { expose: __expose }) {
		__expose();
		const { qux, quux, foo, bar, App, baz } = __MACROS_ctx();
		console.log(foo, bar, baz, qux, quux);
		const __returned__ = {
			qux,
			quux,
			foo,
			bar,
			App,
			baz
		};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_1 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main$1(ctx), [__FILE__]);

const bar$1 = "BAR";
var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	__name: "context.tsx-setup-component-0",
	setup(__props, { expose: __expose }) {
		__expose();
		const { foo, App, baz } = __MACROS_ctx();
		console.log(foo, bar$1, baz, App);
		const __returned__ = {
			foo,
			App,
			baz,
			bar: bar$1
		};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const foo = "foo";
function bar() {}
const App = __MACROS_setupComponent_0(() => ({
	foo,
	bar,
	App,
	baz
}));
{
	const qux = "qux";
	__MACROS_setupComponent_1(() => ({
		qux,
		quux,
		foo,
		bar,
		App,
		baz
	}));
	const quux = "quux";
}
var baz = "baz";

export { App };
"
`;

exports[`fixtures > tests/fixtures/render.tsx 1`] = `
"// render.js
import { defineComponent, createVNode } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	__name: "render.tsx-setup-component-0",
	props: { foo: {
		type: String,
		required: true
	} },
	setup(__props, { expose: __expose }) {
		__expose();
		const { App } = __MACROS_ctx();
		defineRender(() => createVNode("div", null, null));
		const __returned__ = { App };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const App = __MACROS_setupComponent_0(() => ({ App }));

export { App };
"
`;

exports[`fixtures > tests/fixtures/return-render.tsx 1`] = `
"// return-render.js
import { defineComponent, computed, createVNode } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	__name: "return-render.tsx-setup-component-0",
	props: { foo: {
		type: String,
		required: true
	} },
	setup(__props, { expose: __expose }) {
		__expose();
		const { App } = __MACROS_ctx();
		const sum = computed(() => 1 + 2);
		defineRender(() => createVNode("div", null, [sum.value]));
		const __returned__ = {
			App,
			sum,
			computed
		};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const App = __MACROS_setupComponent_0(() => ({ App }));

export { App };
"
`;

exports[`fixtures > tests/fixtures/type-annotation.ts 1`] = `
"// type-annotation.js
import { defineComponent, h } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = (__MACROS_ctx) => /* @__PURE__ */ defineComponent({
	...{ name: "App" },
	__name: "type-annotation.ts-setup-component-0",
	props: { foo: {
		type: String,
		required: true
	} },
	emits: ["change"],
	setup(__props, { expose: __expose }) {
		__expose();
		const { App } = __MACROS_ctx();
		const __returned__ = {
			App,
			h
		};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var __MACROS_setupComponent_0 = (ctx) => /* @__PURE__ */ _export_sfc(_sfc_main(ctx), [__FILE__]);

const App = __MACROS_setupComponent_0(() => ({ App }));
h(App);

export { App };
"
`;
